

@Article{tyrrell:titb04,
  author =	 {J.\ A.\ Tyrrell and J.\ M.\ LaPre and C.\ D.\
                  Carothers and B.\ Roysam and C.\ V.\ Stewart},
  title =	 {Efficient migration of complex off-line computer
                  vision software to real-time system implementation
                  on generic computer hardware},
  journal =	 {Information Technology in Biomedicine, IEEE
                  Transactions on},
  year =	 2004,
  volume =	 8,
  number =	 2,
  pages =	 {142--153},
  keywords =	 {computer vision, eye, laser applications in
                  medicine, real-time systems, surgery, Linux loadable
                  kernel modules, central processing unit cycle,
                  commercial off-the-shelf hardware, complex off-line
                  computer vision software, computer vision code
                  bases, computer-assisted laser retinal surgery,
                  frame-rate vision system, generic computer hardware,
                  open-source computing, ophthalmic surgery, real-time
                  system implementation, real-time vision systems,
                  system-level services, uniprocessor Linux operating
                  system, virtual device driver, Computer vision for
                  surgery, Linux},
  abstract =	 {This paper addresses the problem of migrating large
                  and complex computer vision code bases that have
                  been developed off-line, into efficient real-time
                  implementations avoiding the need for rewriting the
                  software, and the associated costs. Creative linking
                  strategies based on Linux loadable kernel modules
                  are presented to create a simultaneous realization
                  of real-time and off-line frame rate computer vision
                  systems from a single code base. In this approach,
                  systemic predictability is achieved by inserting
                  time-critical components of a user-level executable
                  directly into the kernel as a virtual device
                  driver. This effectively emulates a single process
                  space model that is nonpreemptable, nonpageable, and
                  that has direct access to a powerful set of
                  system-level services. This overall approach is
                  shown to provide the basis for building a
                  predictable frame-rate vision system using
                  commercial off-the-shelf hardware and a standard
                  uniprocessor Linux operating system. Experiments on
                  a frame-rate vision system designed for
                  computer-assisted laser retinal surgery show that
                  this method reduces the variance of observed
                  per-frame central processing unit cycle counts by
                  two orders of magnitude. The conclusion is that when
                  predictable application algorithms are used, it is
                  possible to efficiently migrate to a predictable
                  frame-rate computer vision system.},
  issn =	 {1089-7771},
  annote =	 {}
}
