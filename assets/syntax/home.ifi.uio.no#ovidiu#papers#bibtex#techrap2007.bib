@techreport{sanderson++07,
	author={Norun Sanderson and Katrine Stemland Skjelsvik and Ovidiu Valentin Drugan and Matija Puzar and Vera Goebel and Ellen Munthe-Kaas and Thomas Plagemann},
	title={Developing Mobile Middleware - An Analysis of Rescue and Emergency Operations},
	institution={Department of informatics, University of Oslo, Norway},
	year={2007},
	month= {jun},
	number={Research Report no.358},
	issn={0806-3036},
	isbn={82-7368-316-8}, 
	online={yes},
	abstract={The coordination and collaboration of the personnel from various organisations involved in a rescue operation is important for a successful operation. Data networks can facilitate effective collaboration by providing an efficient and continuous flow of information at the accident scene (i.e., among rescue personnel) and with the outside world (i.e., headquarters of the rescue operation). Unfortunately, this is not easy to achieve because in many cases the infrastructure is not available or not working. If we can assume that all the rescue personnel is carrying a mobile computing device enabled for wireless communication, these devices can provide the necessary network infrastructure. The devices can create Sparse Mobile Ad Hoc Networks (Sparse MANETs), which can provide a best effort infrastructure for information flow, i.e., data sharing and dissemination. These types of networks are very dynamic in terms of network resource availability, e.g., bandwidth or connectivity between nodes. Additionally, the devices can be heterogeneous in terms of available hardware and software resources. Another source of heterogeneity is the way a device is used; this is determined by the affiliation of the end-user and its role. In such an environment, software applications need middleware support in order to best use the infrastructure provided by the Sparse MANET. In the Ad-Hoc InfoWare and MIDAS projects, we develop corresponding middleware services. In this paper, we present a detailed requirement analysis for middleware services imposed by the application domain. To understand better the impact of the application domain, we have analysed the structures of organisations and the intra-/inter-organisation interactions during a rescue operation. We present three different rescue scenarios, which helped us perform a detailed requirements analysis for the middleware components. We have also identified the technical challenges imposed by the highly dynamic environment. We propose a middleware framework composed of four services; knowledge manager, distributed event notification service with watchdogs’ component, resource manager, and security manager. The requirements presented here shaped our design decisions for these building blocks.}
}
